/*#include <SFML/Graphics.hpp>
#include <windows.h>
#include <commdlg.h>
#include <string>
#include <iostream>
#include <locale>
#include <codecvt>

// Función para abrir el cuadro de diálogo de selección de archivos en Windows
std::string wideToString(const std::wstring& wideStr) {
    int sizeNeeded = WideCharToMultiByte(CP_UTF8, 0, wideStr.c_str(), -1, nullptr, 0, nullptr, nullptr);
    if (sizeNeeded <= 0) return "";

    std::string str(sizeNeeded - 1, 0);  // -1 para eliminar el carácter nulo al final
    WideCharToMultiByte(CP_UTF8, 0, wideStr.c_str(), -1, &str[0], sizeNeeded, nullptr, nullptr);
    return str;
}

// Función para abrir un cuadro de diálogo y seleccionar una imagen
std::string openFileDialog() {
    wchar_t filename[MAX_PATH] = L"";
    OPENFILENAME ofn;
    ZeroMemory(&ofn, sizeof(ofn));
    ofn.lStructSize = sizeof(ofn);
    ofn.hwndOwner = NULL;
    ofn.lpstrFilter = L"Imágenes\0*.png;*.jpg;*.jpeg;*.bmp;*.tga\0Todos los archivos\0*.*\0";
    ofn.lpstrFile = filename;
    ofn.nMaxFile = MAX_PATH;
    ofn.Flags = OFN_FILEMUSTEXIST | OFN_PATHMUSTEXIST;

    if (GetOpenFileName(&ofn)) {
        return wideToString(filename);  // Convertir `wchar_t*` a `std::string`
    }
    return "";  // Retorna vacío si el usuario cancela
}
int main() {
    sf::RenderWindow window(sf::VideoMode(800, 600), "Cargar Imagen de Perfil");

    sf::Texture texture;
    sf::Sprite profilePicture;

    std::string imagePath = openFileDialog();
    if (!imagePath.empty()) {
        if (!texture.loadFromFile(imagePath)) {
            std::cerr << "Error al cargar la imagen" << std::endl;
            return -1;
        }

        sf::Vector2u originalSize = texture.getSize();
        float scaleX = 128.f / originalSize.x;
        float scaleY = 128.f / originalSize.y;

        profilePicture.setTexture(texture);
        profilePicture.setScale(scaleX, scaleY);  // Escalar a 128x128
        profilePicture.setPosition(136, 136);  // Centrar en la ventana (opcional)
    }

    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        window.clear(sf::Color::White);
        if (!imagePath.empty()) {
            window.draw(profilePicture);  // Dibujar imagen si se cargó correctamente
        }
        window.display();
    }

    return 0;
}*/
